[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "moneybin"
description = "Experimental financial assistant build to get experience with full stack web development"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Harald Mack", email = "harald.mack@protonmail.com" }]
requires-python = ">=3.10"
dependencies = [
    "fastAPI", 
    "sqlalchemy",
]
dynamic = ["version"]

[project.scripts]
moneybin = "moneybin.__main__:main"

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-randomly",
    "pytest-cov",
    "pytest-mock",
    "pytest-xvfb",
    "ruff"
]

[tool.hatch.version]
path = "src/moneybin/__init__.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
log_cli = "true"
log_cli_level = "DEBUG"

[tool.ruff]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # numpy 2.0 support
    "NPY201",
]
ignore = ["E501"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.coverage.run]
branch = true
source = ["./src"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run
    "@(abc\\.)?abstractmethod",
]
fail_under = 80

[tool.diff_cover]
fail_under = 80
